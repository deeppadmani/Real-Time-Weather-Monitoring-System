C51 COMPILER V9.01   DS1621_DEVICEFRAME                                                    07/11/2020 18:13:31 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS1621_DEVICEFRAME
OBJECT MODULE PLACED IN DS1621_DeviceFrame.OBJ
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE DS1621_DeviceFrame.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"header.h"
   2          
   3          /*--I2C BYTE WRITE FRAME--*/
   4          void i2c_Device_Write(u8 SlaveId,u8 Commands,u8 info) //argument slave addr/ memory addr/ data
   5          { 
   6   1              i2c_start();
   7   1              i2c_write(SlaveId);                                     //write slave addr with write option
   8   1              i2c_Ack();
   9   1              i2c_write(Commands);                            //write memory aadr
  10   1              i2c_Ack();
  11   1              i2c_write(info);                                                //write data
  12   1              i2c_Ack();
  13   1              i2c_stop();
  14   1      }
  15          
  16          /*--I2C BYTE READ FRAME--*/
  17          u8 i2c_Device_Read(u8 SlaveId,u8 Commands)      //argument slave addr/memory addr
  18          {
  19   1              u8 temp=0;
  20   1              i2c_start();
  21   1              i2c_write(SlaveId);             //dummy  write slave aadr +write option
  22   1              i2c_Ack();
  23   1              i2c_write(Commands);    //dummy write memory addr
  24   1              i2c_Ack();
  25   1              
  26   1              i2c_start();                            //restart condition
  27   1              i2c_write(SlaveId|1);           //read slave addr with read option 
  28   1              i2c_Ack();
  29   1              temp=i2c_read();
  30   1              i2c_NoAck();                            //optional
  31   1              i2c_stop();
  32   1              return temp;
  33   1      }
  34          
  35          s16 i2c_device_read_temp(void)
  36          {
  37   1              s16 th;
  38   1              u8 temp[2],slop,count;
  39   1              u16 tempr;
  40   1              i2c_cmd_write(0x90,0xEE);
  41   1              delay_ms(100);
  42   1              i2c_cmd_write(0x90,0x22);
  43   1              delay_ms(10);
  44   1              //i2c_read_string(0x90,0xAA,temp);
  45   1              i2c_Page_Read(0x90,0xAA,2,temp);
  46   1              delay_ms(10);
  47   1              slop=i2c_Device_Read(0x90,0xA9);
  48   1              delay_ms(10);
  49   1              count=i2c_Device_Read(0x90,0xA8);
  50   1              delay_ms(10);
  51   1              tempr=temp[0];
  52   1              tempr=(tempr<<8)|temp[1];
  53   1              th=(tempr-0.25)+((slop-count)/slop);
  54   1      
  55   1              return th;
C51 COMPILER V9.01   DS1621_DEVICEFRAME                                                    07/11/2020 18:13:31 PAGE 2   

  56   1      }
  57          
  58          void i2c_cmd_write(u8 sa,u8 cmd)
  59          {
  60   1              i2c_start();
  61   1              i2c_write(sa);
  62   1              i2c_Ack();
  63   1              i2c_write(cmd);
  64   1              i2c_Ack();
  65   1              i2c_stop();
  66   1      }
  67          
  68          /*void i2c_write_string(u8 sa,u8 mr,const char *s)
  69          {
  70                  u8 j=0;
  71                  i2c_start();
  72                  i2c_write(sa);
  73                  i2c_Ack();
  74                  i2c_write(mr);
  75                  i2c_Ack();
  76                  
  77                  while(s[j])
  78                  {
  79                          i2c_write(s[j]);        
  80                          i2c_Ack();
  81                          j++;
  82                  }
  83                  i2c_write(s[j]);        
  84                  i2c_Ack();
  85                  i2c_stop();
  86          //      delay_ms(10);
  87          }
  88          
  89          void i2c_read_string(u8 sa,u8 mr,u8 *buf)
  90          {
  91                  u8 i=0;
  92                  i2c_start();
  93                  i2c_write(sa);
  94                  i2c_Ack();
  95                  i2c_write(mr);
  96                  i2c_Ack();
  97          
  98                  for(i=0;i<10;i++)//Generic
  99          //      for(i=0;i<2;i++)
 100                  {
 101                          i2c_start();
 102                          i2c_write(sa|1);
 103                          i2c_Ack();              
 104                          buf[i]=i2c_read();
 105                          i2c_NoAck();
 106                          i2c_stop(); 
 107          
 108                  }
 109          }                */
 110          
 111          void i2c_Page_Write(u8 SlaveId,u8 SlaveMemoryId,u8 Count,u8 *info)
 112          {
 113   1               u8 i;
 114   1               i2c_start();
 115   1               i2c_write(SlaveId);
 116   1               i2c_Ack();
 117   1               i2c_write(SlaveMemoryId);
C51 COMPILER V9.01   DS1621_DEVICEFRAME                                                    07/11/2020 18:13:31 PAGE 3   

 118   1               i2c_Ack();
 119   1               for(i=0;i<Count;i++)
 120   1               {
 121   2                      i2c_write(info[i]);
 122   2                      delay_ms(10);
 123   2                      i2c_Ack();
 124   2               }
 125   1               i2c_stop();
 126   1      }
 127           /*--I2C PAGE READ FRAME--*/
 128          void i2c_Page_Read(u8 SlaveId,u8 SlaveMemoryId,u8 Count,u8 *ubuf)       //argument slave addr/memory addr
 129          {
 130   1              u8 i;
 131   1              i2c_start();
 132   1              i2c_write(SlaveId);             //dummy  write slave aadr +write option
 133   1              i2c_Ack();
 134   1              i2c_write(SlaveMemoryId);       //dummy write memory addr
 135   1              i2c_Ack();
 136   1              i2c_stop();
 137   1              
 138   1              for(i=0;i<Count;i++)
 139   1              {
 140   2                      i2c_start();                            //restart condition
 141   2                      i2c_write(SlaveId|1);           //read slave addr with read option
 142   2                      i2c_Ack();
 143   2                      ubuf[i]=i2c_read();
 144   2                      i2c_NoAck();
 145   2                      i2c_stop();             
 146   2              }                       
 147   1      }
 148           
 149          void temp_init()
 150          {
 151   1              u8 te[3];
 152   1              i2c_Device_Write(0x90,0xAC,0x02);
 153   1              delay_ms(10);
 154   1              te[0]=0x28;te[1]=0x0;
 155   1              //i2c_write_string(0x90,0xA1,te);
 156   1              i2c_Page_Write(0x90,0xA1,2,te);
 157   1              delay_ms(10);
 158   1              te[0]=0x0A;te[1]=0x0;
 159   1      //      i2c_write_string(0x90,0xA2,te);
 160   1              i2c_Page_Write(0x90,0xA2,2,te);
 161   1              delay_ms(10);
 162   1      }
 163          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    532    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
